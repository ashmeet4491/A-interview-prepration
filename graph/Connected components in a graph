#include <iostream>

using namespace std;
const int m=4,n=4;
    
    
void dfs(int i,int j,int arr[][n],bool visited[][n])
{

    if(i<0 || j<0 || i>=m ||  j>=n || arr[i][j]==0 || visited[i][j])
    {
        return;
    }
    visited[i][j]=true;
    
    
    dfs(i+1,j,arr,visited);
    dfs(i,j+1,arr,visited);
    dfs(i-1,j,arr,visited);
    dfs(i,j-1,arr,visited);
}

int main()
{
    
    int arr[m][n]={
        {0,1,0,1},
        {1,0,0,0},
        {0,0,1,1},
        {0,1,1,1}
    };
    
    bool visited[4][4]={false};
    int count=0;
    int i,j;
    for(i=0;i<4;++i)
    {
    for(j=0;j<4;++j)
    {
        if(!visited[i][j] && arr[i][j]==1){
            cout<<i<<" "<<j<<"\n";
        dfs(i,j,arr,visited);
        
        ++count;
        }
    }    
    }
    cout<<count;
}
