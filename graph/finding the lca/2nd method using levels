/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <bits/stdc++.h>
using namespace std;
void dfs(int node,int par,vector<int>adj[],int n,map<int,int>&mp)
{
    
    mp[node]=par;
    for(auto it:adj[node])
    {
        if(it!=par)
        dfs(it,node,adj,n,mp);
        
        
    }
    
}
int max_height(int node,int par,int given_node,vector<int>adj[],int level,map<int,int>&mp)
{
   mp[node]=level;
    for(auto it:adj[node])
    {
        if(it!=par)
        {
          max_height(it,node,given_node,adj,level+1,mp);
        }
    }
    
    
}
int main()
{
    int n;
    int m;
    int node;
    cin>>n>>m;
    vector<int>adj[n+1];
    int i;
    int a,b;
    for(i=0;i<m;++i)
    {
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    
    map<int,int>mp;
    dfs(1,0,adj,n,mp);
    int level=1;
   
map<int,int>height;
     max_height(1,0,node,adj,level,height);
     int node1;
     cout<<"enter the node you want ";
     cin>>node1;
     int node2;
     cout<<"enter the second node";
     cin>>node2;
     if(height[node1]>height[node2])
     {
         while(height[node1]!=height[node2]){
         node1=mp[node1];
             
         }
     }
     else if(height[node2]>height[node1])
     {
         while(height[node1]!=height[node2]){
         node2=mp[node2];
             
         }
         
     }
     while(node1!=node2)
     {
         node1=mp[node1];
         node2=mp[node2];
         
     }
cout<<node1;

   
    
}
