/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <bits/stdc++.h>
using namespace std;
vector<int>nodes;
vector<int>level;
void dfs(int node,int par,vector<int>adj[],int height)
{

    nodes.push_back(node);
    level.push_back(height);
    for(auto it:adj[node])
    {
        if(it!=par){
        dfs(it,node,adj,height+1);
        nodes.push_back(node);
        level.push_back(height);
        
        }
        
        
    }
    
    
}
int main()
{
    int n;
    int m;
    cin>>n>>m;
    vector<int>adj[n+1];
    int i;
    int a,b;
    for(i=0;i<m;++i)
    {
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    
    map<int,int>mp;
    int height=1;
    dfs(1,0,adj,height);
    
    int node1;
    cin>>node1;
    int node2;
    cin>>node2;
    int index1;
    int index2;
    for(i=0;i<nodes.size();++i)
    {
        if(nodes[i]==node1)
        {
            index1=i;
            break;
        }
    }
    for(i=0;i<nodes.size();++i)
    {
        if(nodes[i]==node2)
        {
            index2=i;
            break;
        }
    }
    cout<<index1<<" "<<index2<<endl;
    int mini=INT_MAX;
    if(index1>=index2)
    {
        for(i=index2;i<=index1;++i)
        {
            mini=min(level[i],mini);
        }
    }
     else if(index2>index1)
    {
        for(i=index1;i<=index2;++i)
        {
            mini=min(level[i],mini);
        }
    }
    cout<<"LCA"<<mini<<"\n";
    cout<<"\n";
}   
