#include <bits/stdc++.h>
using namespace std;
int high_level=0;
int deepest=1;
void dfs(int node,int par,vector<int>adj[],int n,bool visited[],int level)
{
    
    
    
    for(auto it:adj[node])
    {
        if(it!=par)
        dfs(it,node,adj,n,visited,level+1);
        
        
    }
    if(high_level<level)
    {
        high_level=level;
        deepest=node;
    }
    
}
int main()
{
    int n;
    int m;
    cin>>n>>m;
    vector<int>adj[n+1];
    int i;
    int a,b;
    for(i=0;i<m;++i)
    {
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    bool visited[n];
    i=1;
    int level=0;
    dfs(i,0,adj,n,visited,level);
    
    dfs(deepest,0,adj,n,visited,level);
    cout<<high_level;
}
